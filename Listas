# Listas: são coleções ordenadas e mutáveis que armazenam múltiplos itens, podendo conter diferentes tipos de dados.
prices = [10, 20, 30, 15, 25, 35]
# Access every other element
prices[::2]
[10, 30, 25]

# Access every third element, starting at the second
prices[1::3]
[20, 25]

# Get the last element of a list
prices[-1]
35

# Access the second and third elements
prices[1:3]

Access all elements from the fourth index onwards
prices[3:]
[15, 25, 35]

# Get the first three elements
prices[:3]
[10, 20, 30]

#Dicionários: são coleções não ordenadas de pares chave-valor, onde cada chave é única e mapeia para um valor.
# Creating a dictionary
products_dict = {"AG32": 10, "HT91": 20, "PL65": 30, "OS31": 15, "KB07": 25, "TR48": 35} # todos os elementos entre chaves, sintaxe <key>:<value>

# Find the product's price
products_dict["AG32"]
10

Get all values from a dictionary
products_dict.values()
dict_values([10, 20, 30, 15, 25, 35])

# Retrieve all keys in a dictionary
products_dict.keys()
dict_keys(['AG32', 'HT91', 'PL65', 'OS31', 'KB07', 'TR48'])

# Print the dictionary
print(products_dict)

# Get all items (key-value pairs)
products_dict.items()

# Add a new key-value pair (or update)
products_dict["UI56"] = 40

Sets and Tuples
# Tuplas são coleções ordenadas e imutáveis de itens, que podem conter diferentes tipos de dados.
# Creating a tuple
office_locations = ("New York City", "London", "Leuven")
# Convert another data structure to a tuple
attendees = tuple(attendees_list)
# Access the second element
office_locations[1]
"London"

# Sets são coleções não ordenadas, mutáveis e sem elementos duplicados.
# Sets são usados para eliminar duplicadas pq se vc transformar um conjunto de dados em um set, ao imprimir só virá os itens únicos
# Create an attendee set
attendees_set = {"John Smith", "Alan Jones", "Roger Thompson","John Smith", "Brandon Sharp", "Sam Washington"}
print(attendees_set)
{'Alan Jones', 'Brandon Sharp', 'John Smith', 'Roger Thompson', 'Sam Washington'} 
# Convert to a set
attendees_set = set(attendees_list)
# Check the data type
type(attendees_set)
set
# Trying to subset a set - Sets não possuem índices, é impossível acessar um dos elementos apenas
attendees_set[0]
TypeError: 'set' object is not subscriptable
# Sorting a set
sorted(attendees_set) #sorted() returns a list
['Alan Jones', 'Brandon Sharp', 'John Smith', 'Roger Thompson', 'Sam Washington']











